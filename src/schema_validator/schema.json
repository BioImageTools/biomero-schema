{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Workflow Schema",
  "type": "object",
  "required": ["name", "description", "schema-version", "citations", "container-image", "inputs", "command-line"],
  "properties": {
    "name": {
      "type": "string",
      "description": "GitHub workflow repository name (without prefix). E.g. NucleiTracking-ImageJ"
    },
    "description": {
      "type": "string",
      "description": "Description of workflow"
    },
    "schema-version": {
      "type": "string",
      "description": "Semver of schema version"
    },
    "authors": {
      "type": "array",
      "description": "Authors list",
      "items": {
        "$ref": "#/definitions/author"
      }
    },
    "institutions": {
      "type": "array",
      "description": "Institutions list",
      "items": {
        "$ref": "#/definitions/institution"
      }
    },
    "citations": {
      "type": "array",
      "description": "List of citations for the tool. At least one required",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/citation"
      }
    },
    "container-image": {
      "$ref": "#/definitions/container-image",
      "description": "Base container description"
    },
    "configuration": {
      "$ref": "#/definitions/configuration",
      "description": "Technical configuration"
    },
    "inputs": {
      "type": "array",
      "description": "List of parameter descriptors",
      "items": {
        "$ref": "#/definitions/parameter"
      }
    },
    "outputs": {
      "type": "array",
      "description": "List of output parameter descriptors",
      "items": {
        "$ref": "#/definitions/output-parameter"
      }
    },
    "command-line": {
      "type": "string",
      "description": "Command line template"
    }
  },
  "definitions": {
    "author": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Full name of author"
        },
        "email": {
          "type": "string",
          "description": "Email address of author"
        },
        "affiliations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of affiliations matching 'id' of an institution in institutions list"
        }
      }
    },
    "institution": {
      "type": "object",
      "required": ["id"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique institute identifier"
        },
        "name": {
          "type": "string",
          "description": "Name of the institution. Defaults to id"
        }
      }
    },
    "citation": {
      "type": "object",
      "required": ["name", "license"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the tool being cited"
        },
        "doi": {
          "type": "string",
          "description": "DOI number of the tool being cited. Defaults to empty string"
        },
        "license": {
          "type": "string",
          "description": "License of the tool being cited"
        },
        "description": {
          "type": "string",
          "description": "Description of the tool being cited. Defaults to empty string"
        }
      }
    },
    "container-image": {
      "type": "object",
      "required": ["image", "type"],
      "properties": {
        "image": {
          "type": "string",
          "description": "Image to match the name of your workflow GitHub repository (lower case only)"
        },
        "type": {
          "type": "string",
          "enum": ["OCI", "Singularity"],
          "description": "Container type"
        }
      }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "input_folder": {
          "type": "string",
          "description": "Full path where the input folder must be mounted in the container. Defaults to '/inputs'"
        },
        "output_folder": {
          "type": "string",
          "description": "Full path where the output folder must be mounted in the container. Defaults to '/outputs'"
        },
        "resources": {
          "$ref": "#/definitions/resources"
        }
      }
    },
    "resources": {
      "type": "object",
      "properties": {
        "networking": {
          "type": "boolean",
          "description": "Whether internet connection is needed. Defaults to False"
        },
        "ram-min": {
          "type": "number",
          "description": "Minimum RAM in mebibytes (Mi). Defaults to 0"
        },
        "cores-min": {
          "type": "number",
          "description": "Minimum number of CPU cores. Defaults to 1"
        },
        "gpu": {
          "type": "boolean",
          "description": "GPU/accelerator required. Defaults to False"
        },
        "cuda-requirements": {
          "$ref": "#/definitions/cuda-requirements"
        },
        "cpuAVX": {
          "type": "boolean",
          "description": "Advanced Vector Extensions (AVX) CPU capability required. Defaults to False"
        },
        "cpuAVX2": {
          "type": "boolean",
          "description": "Advanced Vector Extensions 2 (AVX2) CPU capability required. Defaults to False"
        }
      }
    },
    "cuda-requirements": {
      "type": "object",
      "properties": {
        "device-memory-min": {
          "type": "number",
          "description": "Minimum device memory. Defaults to 0"
        },
        "cuda-compute-capability": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "description": "The cudaComputeCapability Schema; single min value or list of valid values. Defaults to None"
        }
      }
    },
    "parameter": {
      "type": "object",
      "required": ["id", "type"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique parameter identifier"
        },
        "type": {
          "type": "string",
          "enum": ["integer", "float", "boolean", "string", "file", "image", "array"],
          "description": "Data type of the parameter"
        },
        "name": {
          "type": "string",
          "description": "Human-readable display name appearing in BIAFLOWS UI (parameter dialog box). Defaults to '@id'"
        },
        "description": {
          "type": "string",
          "description": "Description of parameter. Context help in BIAFLOWS UI (parameter dialog box). Soft Defaults to ''"
        },
        "value-key": {
          "type": "string",
          "description": "Substitution key in CLI. Defaults to '[@ID]'"
        },
        "command-line-flag": {
          "type": "string",
          "description": "CLI flag. Defaults to '--@id'"
        },
        "default-value": {
          "oneOf": [
            {"type": "string"},
            {"type": "number"},
            {"type": "boolean"}
          ],
          "description": "Default value in BIAFLOWS UI (parameter dialog box). Soft Defaults to empty string"
        },
        "optional": {
          "type": "boolean",
          "description": "If true, parameter not required. Soft Defaults to False"
        },
        "set-by-server": {
          "type": "boolean",
          "description": "If true, parameter is server-assigned. Soft Defaults to False"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {"const": "file"}
            }
          },
          "then": {
            "properties": {
              "format": {
                "type": "string",
                "description": "Extension of the file type (.csv)"
              }
            },
            "required": ["format"]
          }
        },
        {
          "if": {
            "properties": {
              "type": {"const": "image"}
            }
          },
          "then": {
            "properties": {
              "sub-type": {
                "type": "string",
                "enum": ["grayscale", "color", "binary", "labeled", "class"],
                "description": "Image type"
              },
              "format": {
                "type": "string",
                "enum": ["tif", "png", "jpg", "jpeg", "tiff", "ometiff"],
                "description": "Extension of the image type"
              }
            },
            "required": ["sub-type", "format"]
          }
        },
        {
          "if": {
            "properties": {
              "type": {"const": "array"}
            }
          },
          "then": {
            "properties": {
              "format": {
                "type": "string",
                "enum": ["npy", "npz"],
                "description": "Extension of the file type"
              }
            },
            "required": ["format"]
          }
        }
      ]
    },
    "output-parameter": {
      "type": "object",
      "required": ["id", "type"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique parameter identifier"
        },
        "type": {
          "type": "string",
          "enum": ["Number", "String"],
          "description": "Data type of the parameter"
        },
        "name": {
          "type": "string",
          "description": "Human-readable display name appearing in BIAFLOWS UI (parameter dialog box). Defaults to '@id'"
        },
        "description": {
          "type": "string",
          "description": "Description of parameter. Context help in BIAFLOWS UI (parameter dialog box). Soft Defaults to ''"
        },
        "value-key": {
          "type": "string",
          "description": "Substitution key in CLI. Defaults to '[@ID]'"
        },
        "command-line-flag": {
          "type": "string",
          "description": "CLI flag. Defaults to '--@id'"
        },
        "default-value": {
          "oneOf": [
            {"type": "string"},
            {"type": "number"},
            {"type": "boolean"}
          ],
          "description": "Default value in BIAFLOWS UI (parameter dialog box). Soft Defaults to empty string"
        },
        "optional": {
          "type": "boolean",
          "description": "If true, parameter not required. Soft Defaults to False"
        },
        "set-by-server": {
          "type": "boolean",
          "description": "If true, parameter is server-assigned. Soft Defaults to False"
        }
      }
    }
  }
}